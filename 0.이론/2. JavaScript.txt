
0. Introduction
   
   (1) Java와 공통점

   (2) Java와 차이점

	1) ;을 안 해도 오류가 나지 않음. (그래도 자바 스타일을 따르자.)

	2) ''(따옴표)와 ""(홑따옴표)와 구분을 할 필요가 없음.

1. 클래스

   (1) document

	1) 해당 페이지문서

	2) body 보다 먼저 실행
	
	3) tag와 style이 적용.

	4) 사용방식
	   html에 출력 => document.write("[ 내용 ]")
 
   (2) console

	1) 인터넷브라우저에 들어가서 F12 누르면 찾을 수 있다.

	2) debugger 창

   (3) alret() : 경고창 

   (4) innerHTML. (나중에 배운다.)

	1) 기본 태그에 JavaScript를 이용해서 데이터를 삽입 할 때 사용.


2. 변수 선언

   (1) 정의: 변수를 만들 때 자료형을 지정하지 않는다.

   (2) 주의점

	1) 숫자로 시작하면 안 됨.

	2) 대소문자 구별한다. (name, Name, NAME은 다르다.)

	3) 기본적으로 소문자로 시작

	4) 상수는 대문자

	5) 문장이 끝날 때 세미콜론 (생략가능)

	6) 선언 후 데이터를 지정하지 않고 출력을 요청하면 오류 (undefined로 출력함.)

	7) 재선언이 가능하다.

   (3) 표현법

 	var 변수명 = 데이터 (정수, 실수, boolean, char, String, null, function, class까지 들어감.)


3. 연산자

   (1) java와 동일

   (2) 관계연산자 주의사항: 형이 다르지만 데이터 값이 같으면 같다고 간주한다.
	
	1) 숫자와 문자 구별 못함.

	2) true와 1, false와 0을 구분 못함.	

	3) 해결 방법: 일치 연산자 사용 (===)
	   * 일치 연산자란? 자료형과 데이터 값이 일치해야 true.


4. 대화상자

   (1) alret(경고창): 사용자에게 내용을 전달하는 역할, return이 없다.


   (2) confirm(확인창): 사용자에게 내용을 전달하는 답을 받는다. return값이 있다. true와 false로 받음.


   (3) prompt(입력창)

	1) HTML에서 form 태그가 있어서 잘 안 쓰임.

	2) prompt("내용"), prompt("내용", "초기값") : 사용자에게 정보를 받을 사용 리턴이 있다.

5. if문 과 switch문  : Java와 동일

6. 반복문 : Java 와 동일 

7. 배열, [Ex06]

   (1) Java와 달리 데이터 형과 상관없이 아무 데이터 형이나 입력할 수 있다. 

   (2) for each문만 다름.

	1) 구문 
	   for(var k in arr3){
		document.write(k);
	   }

	2) 위 처럼 쓰만 인덱스 값만 넘어옴.

 	3) k 대신 arr3[k]로 변경
	   for(var k in arr3){
		document.write(arr3[k]);
	   }


8. 함수 (function ;  기능, 동작, 이벤트 처리), [Ex08]

   (1) 특징: function은 반드시 호출되어야지 만들어짐.
	
   (2) 종류

	1) 선언함수: 함수명이 존재

	   * 표현방법.

	     function 함수이름([매개변수]){
	    	실행내용들:
    	    	[return 값(데이터 또는 변수)]
	     }

	2) 익명함수: 함수명이 존재하지 않음.

	   * 표현방법.
	     
	     var 변수 = function([매개변수]){
	    	실행내용들:
    	    	[return 값(데이터 또는 변수)]
	     }

   (3) 주의점

	1) 선언함수가 먼저 만들어지고 익명함수는 나중에 만들어짐.
	
	2) 함수가 호출 된 뒤에 나온다.

   	3) 선언함수는 먼저 구조를 파악할 때 만들어지고 난 후 명령을 다시 실행한다.

   	4) 익명함수는 만들어지기 전에 호출할 수 없다.

 	5) 이름이 똑같을 경우 나중에 호출되는 것이 덮어 버린다.

	6) 자바스크립트에서는 해당 함수의 property를 사용하려면 this.를 반드시 사용.


   (4) 콜백함수 [Ex10.html]

	1) 정의: 어떤 이벤트가 발생한 후, 수행될 함수를 의미한다. 함수 내부의 처리 결과값을 
		 함수 외부로 내보 낼 때 사용. 함수를 하나의 매개변수로 사용하는 것.

	2) 형태: function 이름(callback){
		 	실행문;
			callback(결과);
		 }

	3) setTimeout(콜백함수, milliseconds);
	   => 정해진 시간 이후에 콜백함수 실행.

	* 람다식: 축약형, 자바(->), 자바스크립트(=>)
	          자바: ([매개변수])->{실행내용}, 자바스크립트 ([매개변수])=>{실행내용};


9. 객체: Object

10. 클래스: 자바와 동일

11. 기타

    (1) toFixed(): 지정된 소숫점 이하 자릿수 반올림하는 toFixed(지정자리), 정수자리수는 안 됨.

    (2) NaN(Not a Number): 숫자가 들어갈 자리에 다른 데이터가 들어오면 에러 처리

    (3) isNaN() : NaN을 확인 (NaN이면 true, NaN이 아니면 false)

12. 데이터 변환

    (1) Number가 문자가 섞여있으면 오류


13. 배열 연습 (Ex16)

    (1) 본문에 있는 id,class 등 selector를 사용하려면 jQuery, Ajax를 사용.

    (2) 자바스크립트는 배열에 추가 및 삭제가 가능하다.

	1) shift: 맨 처음 데이터 삭제 

	2) pop: 맨 마지막 데이터 삭제

	3) unshift(데이터): 맨 앞에 데이터 삽입

	4) push(데이터): 맨 뒤에 데이터 삽입

    (3) 정렬

	sort(): 오름차순
	
	reverse(): 내림차순

        * 숫자 정렬 할 때 한 자리 수와 두 자리가 섞인 경우 한 자리수 앞에 0을 붙여줘야 된다.
	  데이터 형을 문자열로 해야된다. 






