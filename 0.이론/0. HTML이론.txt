
0.Introduction 

   (1) Web 관련 언어.

        HTML: 	   웹페이지 내용 작성
        CSS: 	   웹페이지의 모양과 스타일 지정
        JavaScript: 웹페이지의 동작과 기능을 지정

	반응형 웹 에서 사용하는 폰트

	vw: 뷰포트: 디바이스창의 크기에 맞춰서, 1vw

   (2) HTML(Hyper Text Markup Language)이란? 

        1) 정의: 웹 페이지의 표준 마크 업 언어. / 웹페이지를 표시하는 언어.

	2) Hyper Text: 단순한 텍스트를 넘어 웹 페이지의 특정부분과 연결할 수 있는 기능을 가진 텍스트
		       (링크)

	3) Markup Language: 정보를 구조적, 계층적으로 표현하는 것이 가능한 언어.

	   * 계층적: 트리형태, 부모, 자식, 형제의 구조를 가졌다.

   (3) Tomcat
	
	0) Web application Server

	1) 쓰는 이유: 

	   - 메모장을 이용해서 컴파일하는 것보다 효율적이다. 
		      
	   - HTML을 자바코드로 바꿈.

	   - 게시판의 글 목록, 로그인 처리와 같은 기능을 처리하고 그 결과를 웹 서버에 전달

	   - 웹 서버와 웹 어플리케이션의 역할을 하고 웹 콘테이너 역할을 하여 JSP와 Servlet을 지원한다.



	2) 주의점 오라클과 포트번호가 같아서 충돌이 있을 수 있다. 
	   
	   해결책은 포트번호를 바꾸는 것이다.
	
	   * 포트번호 변경: conf -> server.xml에서 마우스 오른쪽 -> 편집 -> 찾기 기능으로 port="8080" 
			    으로 바꿀 위치를 찾음. -> port="8080"을 URIEncoding="UTF-8" port="8090"
			    으로 변경 -> 저장후 나간다.

	3) webapps
   
   	   3-1) tomcat9에 있다. (경로 C:\tomcat9)
	
	   3-2) 소스코드를 ROOT폴더에 넣는다. (경로 C:\tomcat9\webapps\ROOT)

	   3-3) 실행은 bin폴더에서 startup.bat으로 시작하고 shutdown.bat으로 끝낸다.
		자바 모양 아이콘의 cmd 창이 올라가면서 알 수 없는 문장들이 나와도 문제 없으니 
		당황하지 않아도 된다. 인터넷 창에다가 http://localhost:8090을 쓴후 enter친다.

	   3-4) 이클립스에서 가상의 tomcat9을 작동시킨다. 그래서 이클립스와 tomcat9을 동시에 사용
                할 수 없다.


    (4) Eclipse로 Web을 하기 위한 환경설정하기. 

	 EE는 일반 java와 같다. 

 	 Preferences -> Server -> Add -> tomcat (현재버전) -> tomcat이 있는 경로 

	 Preferences -> Web -> CSS, HTML, JSP Files의 Encoding을 UTF-8로 바꿈. 	 

	 Webbrowser 를 자주쓰는 인터넷 브라우저로 바꾼다.


	 HTML 관련 프로젝트: New -> Dynamic Web Project 

	  * Tomcat runtime이 현재버전과 맞는지 보고 Dynamic web module version 4.0인지 확인할 것.
	
	 폴더 생성이 연동 build path -> Add library -> Server Runtime -> Next 

 	 1) WebContent: HTML

	    package대신  folder	
	
	    Run as -> Run on server -> Finish		

	    * metadata란? 정보 안에 정보

	    가상톰켓: .metadata 폴더에 있다.

	 2) Java Resouces: Java Script

	 3) 백엔드위주 에디터라 html을 잘 지원하지 않는다.
	

    (5) Node.js 설치 할 것. Dynamic Project를 설치할 때 경고문이 뜨지 않고 업무를 지원해준다. 
	 
    (6) HTML은 요청을 Servlet을 거쳐서 가야된다.

    (4) 400: client 오류, 500: server 오류
	

1. HTML 태그와 요소

   (1) Intro 

        1) HTML은 태그로 이루어져 있다.
 
	2) HTML의 요소(elements): 브라우저에 내용을 표시하는 방법을 알려주는 것.
	   * 요소 = elements = 태그	

	3) 웹 브라우저는 태그를 해석하고 해당 내용을 표시하는 프로그램. 


   (2) 태그

	1) 태그의 구조
 
	   <시작 태그> 텍스트 (content) = 브라우저에 표시 되는 내용 </끝태그>

	2) 빈 태그

	   2-1) </끝태그>가 없는 태그도 존재한다.

 	   2-2) 빈 태그들은 속성을 이용해서 화면에 나타나거나, 화면에 표시되지 않아도 다른
                용도로 사용되는 태그

		ex) <br>, <hr>, <img>, <input>

	   2-3) 빈 태그들은 속성을 이용해서 화면에 나타나거나 화면에 표시되지 않더라도 다른 용도로 
                사용된다.

	3) 태그 중첩하기 : 태그는 다른 태그를 포함할 수 있다.
	  
  	   ex) [ 올바른 중첩 ]: <h1> hello, <i>HTML</i></h1>  
               [ 잘못된 중첩 ]: <h1> hello, <i>HTML</h1></i>  

	4) 기본구조

           <!DOCTYPE html>			=> HTML5 문서의 정의
	   <html>
	   	<head>
	   	<title>Page Title</title>
	  	</head>
	   	<body>

	  	</body>
	   </html>
           
	5) 태그는 영어 알파벳 소문자로 쓴다.	

2. HTML Attributes

   (1) 모든 html 요소는 속성을 가질 수 있다.

   (2) 속성은 시작태그에서 지정한다. 

   (3) 일반적으로 name of attributes1 = "값" name of attributes2 = "값" name of attributes3 = "값"

   (4) style 속성 

	1) 색상, 글꼴, 크기 등의 같은 요소의 스타일을 지정할 때 사용 
       
        2) style = "이름:값; 이름:값; 이름:값;"
       
        3) 기본적으로는 CSS로 스타일을 지정하는 것이 좋다.
	

3. 태그 (w3schools)의 순서를 따름.

   (1) <h1> ~ <h6>
	
        1) 문서의 제목을 구현

	2) h1이 가장 높고 h6가 가장 낮다.

	3) h6 이후로는 일반 글자 취급

	4) 일반글자보다 굵고 자동으로 문단 변경이 된다.(블록레벨이다.)

	  * 블록레벨: 한 줄 전체의 영역을 차지하는 태그를 말한다.
	
          

   (2) <hr> : 수평선태그, 블록레벨 

   (3) style 

	1) 작성방법: <시작 태그 style="property1:value1; property2:value2;"> </끝 태그>
	
	2) property란? CSS에서 사용하는 속성
	   
  	   background-color : 배경색
	   
	   color : 글자색

	   font-family : 글꼴

	   font-size : 크기

	   text-align : 정렬, * 블록레벨이 아니면 의미가 없다.

	   font-style : 일반, 기울임체

	   font-weight: bold; => 굵게	
	
	
	3) 사례
  
  	   3-1) <h2 style="background-color:teal; "> 제목 태그 h2</h2> 

	   3-2) 	  	
		<p style="font-family: 궁서체; "> 이것은 문단 태그 입니다. </p>
		<p style="font-size: 30px;"> 스타일 속성을 연습중입니다. </p>
		<p> 이것은 문단 태그 입니다. </p>
		<p style="font-size: 200%; "> 스타일 속성을 연습중입니다. </p>
		<p style="text-align: center;">  이것은 문단 태그 입니다.</p>
		<p style="font-style: italic;"> 스타일 속성을 연습중입니다. </p>
		<p style="font-weight: bold;">  이것은 문단 태그 입니다.</p>
		<p style="font-weight: bold;"> 스타일 속성을 연습중입니다. </p>


   (4) span
       
        1) 해당 영역에 스타일을 주기 위한 태그 

           * 인라인레벨: 해당 영역만 차지하고 있는 태그 
       
	2) 사례: <span style="background-color:yellow;"> 인라인 태그의 가장 대표적인 span </span>


   (5) <p>, <pre>

	1) <p> 태그는 문단태그, 블록레벨이다.

	2) <pre> 태그는 보이는 그대로 줄 변경, 띄어쓰기가 되는 태그. 그대로 보이는 것을 할 때 쓴다.
       
	
   (6) 서식

	1) 서식 태그들은 인라인 레벨이다.

	2) 내용만큼만 영역을 할당한다. (정렬 안 됨.)

	3) 글자 서식의 의미

	   3-1) <i>  : 이텔릭체로 변경

	   3-2) <b> : 볼드체로 변경

	   3-3) <sub>:  아랫 첨자로 변경

	   3-4) <sup> : 윗 첨자로 변경

	4) 글자 강조의 의미 

	   4-1) <strong> : 보기에는 <b>와 같지만, 크롤링할 때 강조의 의미로 본다.

	   4-2) <em>: 보기에는 <i>와 같지만, 크롤링할 때 강조의 의미로 본다.

	5) 디자인적인 의미
 
   (7) 인용문 (Quotation)

	1) <q>: 쌍따옴표 삽입, 짧은 인용문에 사용.

	2) <blockquote>: 장문의 인용문, 들여쓰기, 크기에 맞춰서 자동으로 줄바꿈이 된다.

	3) <abbr>: 약어 또는 머리글 정의할 때 사용 검색 엔진의 주소를 준다. 시멘틱(Semantic) 태그 중 하나
	
	4) <address>: 문서 또는 기사의 연락처 정보를 사용할 때, 꼬리말에서 주소를 쓸때 사용 
		      시맨틱 태그 중 하나

	  * Semantic Tag란? 

   (8) Comments(주석): <!-- -->.

   (9) color 

	1) 테두리선:  <시작태그 style="border: 선두께 선종류 선색깔;"> 내용 </끝태그>

	2) RGB, RGBA: rgb(red, green, blue), rgba(red, green, blue, A) 
           red, green, blue는 0 ~ 255  A는 0 ~ 1
	
	   ex) <시작태그 style="background-color: rgb(255,0,0);"> 내용 </끝태그>
	       <시작태그 style="background-color: rgba(255,0,0,0.5);"> 내용 </끝태그>

	3) HEX, HEXA: RGB를 쓰기 간단하게 표현한 것. #rrggbb:  두글자당 0-9,A~F 십진수로 표현하면 0 ~ 15
						     #rrggbbaa 

   	   ex) <시작태그 style="background-color: #ff0000;">
	       <시작태그 style="background-color: #ff000099;">

   (10) a 태그
	
	1) a href  

	  1-1) 형식: <a href = "url" target = "value"> link text </a>

	  1-2) target에 들어가는 값들: _blank(새창)
				       _self(default, 자기자신)
				       _parent(부모창)
				       name

	2) a:link	=> 일반적인 링크 색 (아직방문하지 않음, blue)
	   a:visited	=> 방문한적인 있는 링크 (purple)
	   a:active 	=> 클릭한 상태의 링크 (red)
	   a:hover 	=> 마우스를 해당 링크에 올렸을 때 

	   text-decoration => 링크 아래 삭제

    (11) img 태그
	
	1) <img src = "url" alt="그림 대신 나오는 문자" title="툴팁" width="넓이" height="높이">

	

4. CSS

   (1) CSS(Cascading Style Sheets) 란? 
	
	you can control the color, font, the size of text, the spacing between elements, 
	how elements are positioned and laid out, what background images or background colors 
	to be used, different displays for different devices and screen sizes, and much more!

   (2) 3가지 Style

	1) Inline - by using the style attribute inside HTML elements: 태그 안에다가 쓰는것
		
	   ex) <h1 style="background-color: tomato; text-align: center;"> HTML CSS 연습</h1>

	2) Internal - by using a <style> element in the <head> section

	3) External - by using a <link> element to link to an external CSS file: 
		      외부에서 CSS파일을 만들어서 사용하는 방법.

   (3) 구조

	1) Internal CSS
	<!DOCTYPE html>
	<html>
		<head>
			<style>
				body {background-color: powderblue;}
				h1   {color: blue;}
				p    {color: red;}
			</style>
		</head>
		<body>
			<h1>This is a heading</h1>
			<p>This is a paragraph.</p>

		</body>
	</html>

    (4) padding and margin

	1) padding: 테두리 안 여백

	2) margin: 테두리 밖 여백

	* 값이 하나일 때: 상하좌우 모두 적용
	* 값이 두 개 일 때: 상하, 좌우
 	* 값이 네 개 일 때: 북쪽, 동쪽, 남쪽, 서쪽 (시계 방향)


5. 테이블 만들기

   (1) Intro

	1) 
			열(column)
	
		행(row)


	2) 테이블 테두리는 CSS에서 뺀다. <style>태그를 이용.
	

6. 보충 

   (1) input 태그

	1) onchange:  enter를 치면 버튼을 누르면 text의 입력 내용이 value가 된다.




#. Tip

  1. 예쁘게 만드는 것 보다 검색이 신속 정확한게 우선이다.

  2. 복사를 한꺼번에 한다음에 붙이고 코드를 작성하면 서버가 꼬일 수 있기 때문에 서버를 끄고 해야된다.
     일부분만 복사를 해서 붙여야 된다.